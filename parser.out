Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> time program links
Rule 2     time -> TIME time_def step_def
Rule 3     time -> TIME step_def time_def
Rule 4     time -> empty
Rule 5     time_def -> HORIZON COLON INT
Rule 6     step_def -> STEP COLON INT
Rule 7     links -> LINKS link_def link_aux
Rule 8     links -> empty
Rule 9     link_def -> NAME EQUAL NAME more_id
Rule 10    link_def -> NAME DOT ID EQUAL NAME DOT ID more_id_aux
Rule 11    more_id_aux -> COMMA NAME DOT ID more_id_aux
Rule 12    more_id_aux -> empty
Rule 13    more_id -> COMMA NAME more_id
Rule 14    more_id -> empty
Rule 15    link_aux -> link_def link_aux
Rule 16    link_aux -> empty
Rule 17    program -> node program
Rule 18    program -> empty
Rule 19    node -> NODE NAME parameters variables constraints objectives
Rule 20    empty -> <empty>
Rule 21    parameters -> PARAM define_parameters
Rule 22    parameters -> empty
Rule 23    define_parameters -> parameter define_parameters
Rule 24    define_parameters -> empty
Rule 25    parameter -> ID unity EQUAL expr
Rule 26    parameter -> ID unity EQUAL LCBRAC term more_values RCBRAC
Rule 27    parameter -> ID unity EQUAL IMPORT FILENAME
Rule 28    more_values -> COMMA term more_values
Rule 29    more_values -> empty
Rule 30    variables -> VAR define_variables
Rule 31    define_variables -> INTERNAL COLON id unity var_aux
Rule 32    define_variables -> OUTPUT COLON id unity var_aux
Rule 33    define_variables -> INPUT COLON id unity var_aux
Rule 34    var_aux -> define_variables
Rule 35    var_aux -> empty
Rule 36    constraints -> CONS constraints_aux
Rule 37    constraints -> empty
Rule 38    constraints_aux -> define_constraints SEMICOLON constraints_aux
Rule 39    constraints_aux -> define_constraints
Rule 40    define_constraints -> expr EQUAL expr
Rule 41    define_constraints -> expr LEQ expr
Rule 42    define_constraints -> expr BEQ expr
Rule 43    define_constraints -> expr LOW expr
Rule 44    define_constraints -> expr BIG expr
Rule 45    objectives -> OBJ define_objectives
Rule 46    objectives -> empty
Rule 47    define_objectives -> MIN COLON expr obj_aux
Rule 48    define_objectives -> MAX COLON expr obj_aux
Rule 49    obj_aux -> define_objectives
Rule 50    obj_aux -> empty
Rule 51    id -> ID LBRAC expr RBRAC
Rule 52    id -> ID
Rule 53    expr -> expr PLUS expr
Rule 54    expr -> expr MINUS expr
Rule 55    expr -> expr MULT expr
Rule 56    expr -> expr DIVIDE expr
Rule 57    expr -> MINUS expr
Rule 58    expr -> expr POW expr
Rule 59    expr -> LPAR expr RPAR
Rule 60    expr -> term
Rule 61    term -> INT
Rule 62    term -> FLOAT
Rule 63    term -> id
Rule 64    unity -> IN expr
Rule 65    unity -> empty

Terminals, with rules where they appear

BEQ                  : 42
BIG                  : 44
COLON                : 5 6 31 32 33 47 48
COMMA                : 11 13 28
CONS                 : 36
DIVIDE               : 56
DOT                  : 10 10 11
EQUAL                : 9 10 25 26 27 40
FILENAME             : 27
FLOAT                : 62
HORIZON              : 5
ID                   : 10 10 11 25 26 27 51 52
IMPORT               : 27
IN                   : 64
INPUT                : 33
INT                  : 5 6 61
INTERNAL             : 31
LBRAC                : 51
LCBRAC               : 26
LEQ                  : 41
LINKS                : 7
LOW                  : 43
LPAR                 : 59
MAX                  : 48
MIN                  : 47
MINUS                : 54 57
MULT                 : 55
NAME                 : 9 9 10 10 11 13 19
NODE                 : 19
OBJ                  : 45
OUTPUT               : 32
PARAM                : 21
PLUS                 : 53
POW                  : 58
RBRAC                : 51
RCBRAC               : 26
RPAR                 : 59
SEMICOLON            : 38
STEP                 : 6
TIME                 : 2 3
VAR                  : 30
error                : 

Nonterminals, with rules where they appear

constraints          : 19
constraints_aux      : 36 38
define_constraints   : 38 39
define_objectives    : 45 49
define_parameters    : 21 23
define_variables     : 30 34
empty                : 4 8 12 14 16 18 22 24 29 35 37 46 50 65
expr                 : 25 40 40 41 41 42 42 43 43 44 44 47 48 51 53 53 54 54 55 55 56 56 57 58 58 59 64
id                   : 31 32 33 63
link_aux             : 7 15
link_def             : 7 15
links                : 1
more_id              : 9 13
more_id_aux          : 10 11
more_values          : 26 28
node                 : 17
obj_aux              : 47 48
objectives           : 19
parameter            : 23
parameters           : 19
program              : 1 17
start                : 0
step_def             : 2 3
term                 : 26 28 60
time                 : 1
time_def             : 2 3
unity                : 25 26 27 31 32 33
var_aux              : 31 32 33
variables            : 19

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . time program links
    (2) time -> . TIME time_def step_def
    (3) time -> . TIME step_def time_def
    (4) time -> . empty
    (20) empty -> .

    TIME            shift and go to state 3
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    start                          shift and go to state 1
    time                           shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> time . program links
    (17) program -> . node program
    (18) program -> . empty
    (19) node -> . NODE NAME parameters variables constraints objectives
    (20) empty -> .

    NODE            shift and go to state 8
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    program                        shift and go to state 5
    node                           shift and go to state 6
    empty                          shift and go to state 7

state 3

    (2) time -> TIME . time_def step_def
    (3) time -> TIME . step_def time_def
    (5) time_def -> . HORIZON COLON INT
    (6) step_def -> . STEP COLON INT

    HORIZON         shift and go to state 11
    STEP            shift and go to state 12

    time_def                       shift and go to state 9
    step_def                       shift and go to state 10

state 4

    (4) time -> empty .

    NODE            reduce using rule 4 (time -> empty .)
    LINKS           reduce using rule 4 (time -> empty .)
    $end            reduce using rule 4 (time -> empty .)


state 5

    (1) start -> time program . links
    (7) links -> . LINKS link_def link_aux
    (8) links -> . empty
    (20) empty -> .

    LINKS           shift and go to state 14
    $end            reduce using rule 20 (empty -> .)

    links                          shift and go to state 13
    empty                          shift and go to state 15

state 6

    (17) program -> node . program
    (17) program -> . node program
    (18) program -> . empty
    (19) node -> . NODE NAME parameters variables constraints objectives
    (20) empty -> .

    NODE            shift and go to state 8
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    node                           shift and go to state 6
    program                        shift and go to state 16
    empty                          shift and go to state 7

state 7

    (18) program -> empty .

    LINKS           reduce using rule 18 (program -> empty .)
    $end            reduce using rule 18 (program -> empty .)


state 8

    (19) node -> NODE . NAME parameters variables constraints objectives

    NAME            shift and go to state 17


state 9

    (2) time -> TIME time_def . step_def
    (6) step_def -> . STEP COLON INT

    STEP            shift and go to state 12

    step_def                       shift and go to state 18

state 10

    (3) time -> TIME step_def . time_def
    (5) time_def -> . HORIZON COLON INT

    HORIZON         shift and go to state 11

    time_def                       shift and go to state 19

state 11

    (5) time_def -> HORIZON . COLON INT

    COLON           shift and go to state 20


state 12

    (6) step_def -> STEP . COLON INT

    COLON           shift and go to state 21


state 13

    (1) start -> time program links .

    $end            reduce using rule 1 (start -> time program links .)


state 14

    (7) links -> LINKS . link_def link_aux
    (9) link_def -> . NAME EQUAL NAME more_id
    (10) link_def -> . NAME DOT ID EQUAL NAME DOT ID more_id_aux

    NAME            shift and go to state 23

    link_def                       shift and go to state 22

state 15

    (8) links -> empty .

    $end            reduce using rule 8 (links -> empty .)


state 16

    (17) program -> node program .

    LINKS           reduce using rule 17 (program -> node program .)
    $end            reduce using rule 17 (program -> node program .)


state 17

    (19) node -> NODE NAME . parameters variables constraints objectives
    (21) parameters -> . PARAM define_parameters
    (22) parameters -> . empty
    (20) empty -> .

    PARAM           shift and go to state 25
    VAR             reduce using rule 20 (empty -> .)

    parameters                     shift and go to state 24
    empty                          shift and go to state 26

state 18

    (2) time -> TIME time_def step_def .

    NODE            reduce using rule 2 (time -> TIME time_def step_def .)
    LINKS           reduce using rule 2 (time -> TIME time_def step_def .)
    $end            reduce using rule 2 (time -> TIME time_def step_def .)


state 19

    (3) time -> TIME step_def time_def .

    NODE            reduce using rule 3 (time -> TIME step_def time_def .)
    LINKS           reduce using rule 3 (time -> TIME step_def time_def .)
    $end            reduce using rule 3 (time -> TIME step_def time_def .)


state 20

    (5) time_def -> HORIZON COLON . INT

    INT             shift and go to state 27


state 21

    (6) step_def -> STEP COLON . INT

    INT             shift and go to state 28


state 22

    (7) links -> LINKS link_def . link_aux
    (15) link_aux -> . link_def link_aux
    (16) link_aux -> . empty
    (9) link_def -> . NAME EQUAL NAME more_id
    (10) link_def -> . NAME DOT ID EQUAL NAME DOT ID more_id_aux
    (20) empty -> .

    NAME            shift and go to state 23
    $end            reduce using rule 20 (empty -> .)

    link_def                       shift and go to state 29
    link_aux                       shift and go to state 30
    empty                          shift and go to state 31

state 23

    (9) link_def -> NAME . EQUAL NAME more_id
    (10) link_def -> NAME . DOT ID EQUAL NAME DOT ID more_id_aux

    EQUAL           shift and go to state 32
    DOT             shift and go to state 33


state 24

    (19) node -> NODE NAME parameters . variables constraints objectives
    (30) variables -> . VAR define_variables

    VAR             shift and go to state 35

    variables                      shift and go to state 34

state 25

    (21) parameters -> PARAM . define_parameters
    (23) define_parameters -> . parameter define_parameters
    (24) define_parameters -> . empty
    (25) parameter -> . ID unity EQUAL expr
    (26) parameter -> . ID unity EQUAL LCBRAC term more_values RCBRAC
    (27) parameter -> . ID unity EQUAL IMPORT FILENAME
    (20) empty -> .

    ID              shift and go to state 39
    VAR             reduce using rule 20 (empty -> .)

    define_parameters              shift and go to state 36
    parameter                      shift and go to state 37
    empty                          shift and go to state 38

state 26

    (22) parameters -> empty .

    VAR             reduce using rule 22 (parameters -> empty .)


state 27

    (5) time_def -> HORIZON COLON INT .

    STEP            reduce using rule 5 (time_def -> HORIZON COLON INT .)
    NODE            reduce using rule 5 (time_def -> HORIZON COLON INT .)
    LINKS           reduce using rule 5 (time_def -> HORIZON COLON INT .)
    $end            reduce using rule 5 (time_def -> HORIZON COLON INT .)


state 28

    (6) step_def -> STEP COLON INT .

    HORIZON         reduce using rule 6 (step_def -> STEP COLON INT .)
    NODE            reduce using rule 6 (step_def -> STEP COLON INT .)
    LINKS           reduce using rule 6 (step_def -> STEP COLON INT .)
    $end            reduce using rule 6 (step_def -> STEP COLON INT .)


state 29

    (15) link_aux -> link_def . link_aux
    (15) link_aux -> . link_def link_aux
    (16) link_aux -> . empty
    (9) link_def -> . NAME EQUAL NAME more_id
    (10) link_def -> . NAME DOT ID EQUAL NAME DOT ID more_id_aux
    (20) empty -> .

    NAME            shift and go to state 23
    $end            reduce using rule 20 (empty -> .)

    link_def                       shift and go to state 29
    link_aux                       shift and go to state 40
    empty                          shift and go to state 31

state 30

    (7) links -> LINKS link_def link_aux .

    $end            reduce using rule 7 (links -> LINKS link_def link_aux .)


state 31

    (16) link_aux -> empty .

    $end            reduce using rule 16 (link_aux -> empty .)


state 32

    (9) link_def -> NAME EQUAL . NAME more_id

    NAME            shift and go to state 41


state 33

    (10) link_def -> NAME DOT . ID EQUAL NAME DOT ID more_id_aux

    ID              shift and go to state 42


state 34

    (19) node -> NODE NAME parameters variables . constraints objectives
    (36) constraints -> . CONS constraints_aux
    (37) constraints -> . empty
    (20) empty -> .

    CONS            shift and go to state 44
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    constraints                    shift and go to state 43
    empty                          shift and go to state 45

state 35

    (30) variables -> VAR . define_variables
    (31) define_variables -> . INTERNAL COLON id unity var_aux
    (32) define_variables -> . OUTPUT COLON id unity var_aux
    (33) define_variables -> . INPUT COLON id unity var_aux

    INTERNAL        shift and go to state 47
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49

    define_variables               shift and go to state 46

state 36

    (21) parameters -> PARAM define_parameters .

    VAR             reduce using rule 21 (parameters -> PARAM define_parameters .)


state 37

    (23) define_parameters -> parameter . define_parameters
    (23) define_parameters -> . parameter define_parameters
    (24) define_parameters -> . empty
    (25) parameter -> . ID unity EQUAL expr
    (26) parameter -> . ID unity EQUAL LCBRAC term more_values RCBRAC
    (27) parameter -> . ID unity EQUAL IMPORT FILENAME
    (20) empty -> .

    ID              shift and go to state 39
    VAR             reduce using rule 20 (empty -> .)

    parameter                      shift and go to state 37
    define_parameters              shift and go to state 50
    empty                          shift and go to state 38

state 38

    (24) define_parameters -> empty .

    VAR             reduce using rule 24 (define_parameters -> empty .)


state 39

    (25) parameter -> ID . unity EQUAL expr
    (26) parameter -> ID . unity EQUAL LCBRAC term more_values RCBRAC
    (27) parameter -> ID . unity EQUAL IMPORT FILENAME
    (64) unity -> . IN expr
    (65) unity -> . empty
    (20) empty -> .

    IN              shift and go to state 52
    EQUAL           reduce using rule 20 (empty -> .)

    unity                          shift and go to state 51
    empty                          shift and go to state 53

state 40

    (15) link_aux -> link_def link_aux .

    $end            reduce using rule 15 (link_aux -> link_def link_aux .)


state 41

    (9) link_def -> NAME EQUAL NAME . more_id
    (13) more_id -> . COMMA NAME more_id
    (14) more_id -> . empty
    (20) empty -> .

    COMMA           shift and go to state 55
    NAME            reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    more_id                        shift and go to state 54
    empty                          shift and go to state 56

state 42

    (10) link_def -> NAME DOT ID . EQUAL NAME DOT ID more_id_aux

    EQUAL           shift and go to state 57


state 43

    (19) node -> NODE NAME parameters variables constraints . objectives
    (45) objectives -> . OBJ define_objectives
    (46) objectives -> . empty
    (20) empty -> .

    OBJ             shift and go to state 59
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    objectives                     shift and go to state 58
    empty                          shift and go to state 60

state 44

    (36) constraints -> CONS . constraints_aux
    (38) constraints_aux -> . define_constraints SEMICOLON constraints_aux
    (39) constraints_aux -> . define_constraints
    (40) define_constraints -> . expr EQUAL expr
    (41) define_constraints -> . expr LEQ expr
    (42) define_constraints -> . expr BEQ expr
    (43) define_constraints -> . expr LOW expr
    (44) define_constraints -> . expr BIG expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    constraints_aux                shift and go to state 61
    define_constraints             shift and go to state 62
    expr                           shift and go to state 63
    term                           shift and go to state 66
    id                             shift and go to state 69

state 45

    (37) constraints -> empty .

    OBJ             reduce using rule 37 (constraints -> empty .)
    NODE            reduce using rule 37 (constraints -> empty .)
    LINKS           reduce using rule 37 (constraints -> empty .)
    $end            reduce using rule 37 (constraints -> empty .)


state 46

    (30) variables -> VAR define_variables .

    CONS            reduce using rule 30 (variables -> VAR define_variables .)
    OBJ             reduce using rule 30 (variables -> VAR define_variables .)
    NODE            reduce using rule 30 (variables -> VAR define_variables .)
    LINKS           reduce using rule 30 (variables -> VAR define_variables .)
    $end            reduce using rule 30 (variables -> VAR define_variables .)


state 47

    (31) define_variables -> INTERNAL . COLON id unity var_aux

    COLON           shift and go to state 71


state 48

    (32) define_variables -> OUTPUT . COLON id unity var_aux

    COLON           shift and go to state 72


state 49

    (33) define_variables -> INPUT . COLON id unity var_aux

    COLON           shift and go to state 73


state 50

    (23) define_parameters -> parameter define_parameters .

    VAR             reduce using rule 23 (define_parameters -> parameter define_parameters .)


state 51

    (25) parameter -> ID unity . EQUAL expr
    (26) parameter -> ID unity . EQUAL LCBRAC term more_values RCBRAC
    (27) parameter -> ID unity . EQUAL IMPORT FILENAME

    EQUAL           shift and go to state 74


state 52

    (64) unity -> IN . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 75
    term                           shift and go to state 66
    id                             shift and go to state 69

state 53

    (65) unity -> empty .

    EQUAL           reduce using rule 65 (unity -> empty .)
    INTERNAL        reduce using rule 65 (unity -> empty .)
    OUTPUT          reduce using rule 65 (unity -> empty .)
    INPUT           reduce using rule 65 (unity -> empty .)
    CONS            reduce using rule 65 (unity -> empty .)
    OBJ             reduce using rule 65 (unity -> empty .)
    NODE            reduce using rule 65 (unity -> empty .)
    LINKS           reduce using rule 65 (unity -> empty .)
    $end            reduce using rule 65 (unity -> empty .)


state 54

    (9) link_def -> NAME EQUAL NAME more_id .

    NAME            reduce using rule 9 (link_def -> NAME EQUAL NAME more_id .)
    $end            reduce using rule 9 (link_def -> NAME EQUAL NAME more_id .)


state 55

    (13) more_id -> COMMA . NAME more_id

    NAME            shift and go to state 76


state 56

    (14) more_id -> empty .

    NAME            reduce using rule 14 (more_id -> empty .)
    $end            reduce using rule 14 (more_id -> empty .)


state 57

    (10) link_def -> NAME DOT ID EQUAL . NAME DOT ID more_id_aux

    NAME            shift and go to state 77


state 58

    (19) node -> NODE NAME parameters variables constraints objectives .

    NODE            reduce using rule 19 (node -> NODE NAME parameters variables constraints objectives .)
    LINKS           reduce using rule 19 (node -> NODE NAME parameters variables constraints objectives .)
    $end            reduce using rule 19 (node -> NODE NAME parameters variables constraints objectives .)


state 59

    (45) objectives -> OBJ . define_objectives
    (47) define_objectives -> . MIN COLON expr obj_aux
    (48) define_objectives -> . MAX COLON expr obj_aux

    MIN             shift and go to state 79
    MAX             shift and go to state 80

    define_objectives              shift and go to state 78

state 60

    (46) objectives -> empty .

    NODE            reduce using rule 46 (objectives -> empty .)
    LINKS           reduce using rule 46 (objectives -> empty .)
    $end            reduce using rule 46 (objectives -> empty .)


state 61

    (36) constraints -> CONS constraints_aux .

    OBJ             reduce using rule 36 (constraints -> CONS constraints_aux .)
    NODE            reduce using rule 36 (constraints -> CONS constraints_aux .)
    LINKS           reduce using rule 36 (constraints -> CONS constraints_aux .)
    $end            reduce using rule 36 (constraints -> CONS constraints_aux .)


state 62

    (38) constraints_aux -> define_constraints . SEMICOLON constraints_aux
    (39) constraints_aux -> define_constraints .

    SEMICOLON       shift and go to state 81
    OBJ             reduce using rule 39 (constraints_aux -> define_constraints .)
    NODE            reduce using rule 39 (constraints_aux -> define_constraints .)
    LINKS           reduce using rule 39 (constraints_aux -> define_constraints .)
    $end            reduce using rule 39 (constraints_aux -> define_constraints .)


state 63

    (40) define_constraints -> expr . EQUAL expr
    (41) define_constraints -> expr . LEQ expr
    (42) define_constraints -> expr . BEQ expr
    (43) define_constraints -> expr . LOW expr
    (44) define_constraints -> expr . BIG expr
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           shift and go to state 82
    LEQ             shift and go to state 83
    BEQ             shift and go to state 84
    LOW             shift and go to state 85
    BIG             shift and go to state 86
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 64

    (57) expr -> MINUS . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 92
    term                           shift and go to state 66
    id                             shift and go to state 69

state 65

    (59) expr -> LPAR . expr RPAR
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 93
    term                           shift and go to state 66
    id                             shift and go to state 69

state 66

    (60) expr -> term .

    EQUAL           reduce using rule 60 (expr -> term .)
    LEQ             reduce using rule 60 (expr -> term .)
    BEQ             reduce using rule 60 (expr -> term .)
    LOW             reduce using rule 60 (expr -> term .)
    BIG             reduce using rule 60 (expr -> term .)
    PLUS            reduce using rule 60 (expr -> term .)
    MINUS           reduce using rule 60 (expr -> term .)
    MULT            reduce using rule 60 (expr -> term .)
    DIVIDE          reduce using rule 60 (expr -> term .)
    POW             reduce using rule 60 (expr -> term .)
    INTERNAL        reduce using rule 60 (expr -> term .)
    OUTPUT          reduce using rule 60 (expr -> term .)
    INPUT           reduce using rule 60 (expr -> term .)
    CONS            reduce using rule 60 (expr -> term .)
    OBJ             reduce using rule 60 (expr -> term .)
    NODE            reduce using rule 60 (expr -> term .)
    LINKS           reduce using rule 60 (expr -> term .)
    $end            reduce using rule 60 (expr -> term .)
    RPAR            reduce using rule 60 (expr -> term .)
    ID              reduce using rule 60 (expr -> term .)
    VAR             reduce using rule 60 (expr -> term .)
    SEMICOLON       reduce using rule 60 (expr -> term .)
    RBRAC           reduce using rule 60 (expr -> term .)
    MIN             reduce using rule 60 (expr -> term .)
    MAX             reduce using rule 60 (expr -> term .)


state 67

    (61) term -> INT .

    EQUAL           reduce using rule 61 (term -> INT .)
    LEQ             reduce using rule 61 (term -> INT .)
    BEQ             reduce using rule 61 (term -> INT .)
    LOW             reduce using rule 61 (term -> INT .)
    BIG             reduce using rule 61 (term -> INT .)
    PLUS            reduce using rule 61 (term -> INT .)
    MINUS           reduce using rule 61 (term -> INT .)
    MULT            reduce using rule 61 (term -> INT .)
    DIVIDE          reduce using rule 61 (term -> INT .)
    POW             reduce using rule 61 (term -> INT .)
    INTERNAL        reduce using rule 61 (term -> INT .)
    OUTPUT          reduce using rule 61 (term -> INT .)
    INPUT           reduce using rule 61 (term -> INT .)
    CONS            reduce using rule 61 (term -> INT .)
    OBJ             reduce using rule 61 (term -> INT .)
    NODE            reduce using rule 61 (term -> INT .)
    LINKS           reduce using rule 61 (term -> INT .)
    $end            reduce using rule 61 (term -> INT .)
    RPAR            reduce using rule 61 (term -> INT .)
    ID              reduce using rule 61 (term -> INT .)
    VAR             reduce using rule 61 (term -> INT .)
    SEMICOLON       reduce using rule 61 (term -> INT .)
    RBRAC           reduce using rule 61 (term -> INT .)
    MIN             reduce using rule 61 (term -> INT .)
    MAX             reduce using rule 61 (term -> INT .)
    COMMA           reduce using rule 61 (term -> INT .)
    RCBRAC          reduce using rule 61 (term -> INT .)


state 68

    (62) term -> FLOAT .

    EQUAL           reduce using rule 62 (term -> FLOAT .)
    LEQ             reduce using rule 62 (term -> FLOAT .)
    BEQ             reduce using rule 62 (term -> FLOAT .)
    LOW             reduce using rule 62 (term -> FLOAT .)
    BIG             reduce using rule 62 (term -> FLOAT .)
    PLUS            reduce using rule 62 (term -> FLOAT .)
    MINUS           reduce using rule 62 (term -> FLOAT .)
    MULT            reduce using rule 62 (term -> FLOAT .)
    DIVIDE          reduce using rule 62 (term -> FLOAT .)
    POW             reduce using rule 62 (term -> FLOAT .)
    INTERNAL        reduce using rule 62 (term -> FLOAT .)
    OUTPUT          reduce using rule 62 (term -> FLOAT .)
    INPUT           reduce using rule 62 (term -> FLOAT .)
    CONS            reduce using rule 62 (term -> FLOAT .)
    OBJ             reduce using rule 62 (term -> FLOAT .)
    NODE            reduce using rule 62 (term -> FLOAT .)
    LINKS           reduce using rule 62 (term -> FLOAT .)
    $end            reduce using rule 62 (term -> FLOAT .)
    RPAR            reduce using rule 62 (term -> FLOAT .)
    ID              reduce using rule 62 (term -> FLOAT .)
    VAR             reduce using rule 62 (term -> FLOAT .)
    SEMICOLON       reduce using rule 62 (term -> FLOAT .)
    RBRAC           reduce using rule 62 (term -> FLOAT .)
    MIN             reduce using rule 62 (term -> FLOAT .)
    MAX             reduce using rule 62 (term -> FLOAT .)
    COMMA           reduce using rule 62 (term -> FLOAT .)
    RCBRAC          reduce using rule 62 (term -> FLOAT .)


state 69

    (63) term -> id .

    EQUAL           reduce using rule 63 (term -> id .)
    LEQ             reduce using rule 63 (term -> id .)
    BEQ             reduce using rule 63 (term -> id .)
    LOW             reduce using rule 63 (term -> id .)
    BIG             reduce using rule 63 (term -> id .)
    PLUS            reduce using rule 63 (term -> id .)
    MINUS           reduce using rule 63 (term -> id .)
    MULT            reduce using rule 63 (term -> id .)
    DIVIDE          reduce using rule 63 (term -> id .)
    POW             reduce using rule 63 (term -> id .)
    INTERNAL        reduce using rule 63 (term -> id .)
    OUTPUT          reduce using rule 63 (term -> id .)
    INPUT           reduce using rule 63 (term -> id .)
    CONS            reduce using rule 63 (term -> id .)
    OBJ             reduce using rule 63 (term -> id .)
    NODE            reduce using rule 63 (term -> id .)
    LINKS           reduce using rule 63 (term -> id .)
    $end            reduce using rule 63 (term -> id .)
    RPAR            reduce using rule 63 (term -> id .)
    ID              reduce using rule 63 (term -> id .)
    VAR             reduce using rule 63 (term -> id .)
    SEMICOLON       reduce using rule 63 (term -> id .)
    RBRAC           reduce using rule 63 (term -> id .)
    MIN             reduce using rule 63 (term -> id .)
    MAX             reduce using rule 63 (term -> id .)
    COMMA           reduce using rule 63 (term -> id .)
    RCBRAC          reduce using rule 63 (term -> id .)


state 70

    (51) id -> ID . LBRAC expr RBRAC
    (52) id -> ID .

    LBRAC           shift and go to state 94
    EQUAL           reduce using rule 52 (id -> ID .)
    LEQ             reduce using rule 52 (id -> ID .)
    BEQ             reduce using rule 52 (id -> ID .)
    LOW             reduce using rule 52 (id -> ID .)
    BIG             reduce using rule 52 (id -> ID .)
    PLUS            reduce using rule 52 (id -> ID .)
    MINUS           reduce using rule 52 (id -> ID .)
    MULT            reduce using rule 52 (id -> ID .)
    DIVIDE          reduce using rule 52 (id -> ID .)
    POW             reduce using rule 52 (id -> ID .)
    INTERNAL        reduce using rule 52 (id -> ID .)
    OUTPUT          reduce using rule 52 (id -> ID .)
    INPUT           reduce using rule 52 (id -> ID .)
    CONS            reduce using rule 52 (id -> ID .)
    OBJ             reduce using rule 52 (id -> ID .)
    NODE            reduce using rule 52 (id -> ID .)
    LINKS           reduce using rule 52 (id -> ID .)
    $end            reduce using rule 52 (id -> ID .)
    RPAR            reduce using rule 52 (id -> ID .)
    ID              reduce using rule 52 (id -> ID .)
    VAR             reduce using rule 52 (id -> ID .)
    SEMICOLON       reduce using rule 52 (id -> ID .)
    RBRAC           reduce using rule 52 (id -> ID .)
    MIN             reduce using rule 52 (id -> ID .)
    MAX             reduce using rule 52 (id -> ID .)
    IN              reduce using rule 52 (id -> ID .)
    COMMA           reduce using rule 52 (id -> ID .)
    RCBRAC          reduce using rule 52 (id -> ID .)


state 71

    (31) define_variables -> INTERNAL COLON . id unity var_aux
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    ID              shift and go to state 70

    id                             shift and go to state 95

state 72

    (32) define_variables -> OUTPUT COLON . id unity var_aux
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    ID              shift and go to state 70

    id                             shift and go to state 96

state 73

    (33) define_variables -> INPUT COLON . id unity var_aux
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    ID              shift and go to state 70

    id                             shift and go to state 97

state 74

    (25) parameter -> ID unity EQUAL . expr
    (26) parameter -> ID unity EQUAL . LCBRAC term more_values RCBRAC
    (27) parameter -> ID unity EQUAL . IMPORT FILENAME
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    LCBRAC          shift and go to state 99
    IMPORT          shift and go to state 100
    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 98
    term                           shift and go to state 66
    id                             shift and go to state 69

state 75

    (64) unity -> IN expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 64 (unity -> IN expr .)
    INTERNAL        reduce using rule 64 (unity -> IN expr .)
    OUTPUT          reduce using rule 64 (unity -> IN expr .)
    INPUT           reduce using rule 64 (unity -> IN expr .)
    CONS            reduce using rule 64 (unity -> IN expr .)
    OBJ             reduce using rule 64 (unity -> IN expr .)
    NODE            reduce using rule 64 (unity -> IN expr .)
    LINKS           reduce using rule 64 (unity -> IN expr .)
    $end            reduce using rule 64 (unity -> IN expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 76

    (13) more_id -> COMMA NAME . more_id
    (13) more_id -> . COMMA NAME more_id
    (14) more_id -> . empty
    (20) empty -> .

    COMMA           shift and go to state 55
    NAME            reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    more_id                        shift and go to state 101
    empty                          shift and go to state 56

state 77

    (10) link_def -> NAME DOT ID EQUAL NAME . DOT ID more_id_aux

    DOT             shift and go to state 102


state 78

    (45) objectives -> OBJ define_objectives .

    NODE            reduce using rule 45 (objectives -> OBJ define_objectives .)
    LINKS           reduce using rule 45 (objectives -> OBJ define_objectives .)
    $end            reduce using rule 45 (objectives -> OBJ define_objectives .)


state 79

    (47) define_objectives -> MIN . COLON expr obj_aux

    COLON           shift and go to state 103


state 80

    (48) define_objectives -> MAX . COLON expr obj_aux

    COLON           shift and go to state 104


state 81

    (38) constraints_aux -> define_constraints SEMICOLON . constraints_aux
    (38) constraints_aux -> . define_constraints SEMICOLON constraints_aux
    (39) constraints_aux -> . define_constraints
    (40) define_constraints -> . expr EQUAL expr
    (41) define_constraints -> . expr LEQ expr
    (42) define_constraints -> . expr BEQ expr
    (43) define_constraints -> . expr LOW expr
    (44) define_constraints -> . expr BIG expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    define_constraints             shift and go to state 62
    constraints_aux                shift and go to state 105
    expr                           shift and go to state 63
    term                           shift and go to state 66
    id                             shift and go to state 69

state 82

    (40) define_constraints -> expr EQUAL . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 106
    term                           shift and go to state 66
    id                             shift and go to state 69

state 83

    (41) define_constraints -> expr LEQ . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 107
    term                           shift and go to state 66
    id                             shift and go to state 69

state 84

    (42) define_constraints -> expr BEQ . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 108
    term                           shift and go to state 66
    id                             shift and go to state 69

state 85

    (43) define_constraints -> expr LOW . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 109
    term                           shift and go to state 66
    id                             shift and go to state 69

state 86

    (44) define_constraints -> expr BIG . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 110
    term                           shift and go to state 66
    id                             shift and go to state 69

state 87

    (53) expr -> expr PLUS . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 111
    term                           shift and go to state 66
    id                             shift and go to state 69

state 88

    (54) expr -> expr MINUS . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 112
    term                           shift and go to state 66
    id                             shift and go to state 69

state 89

    (55) expr -> expr MULT . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 113
    term                           shift and go to state 66
    id                             shift and go to state 69

state 90

    (56) expr -> expr DIVIDE . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 114
    term                           shift and go to state 66
    id                             shift and go to state 69

state 91

    (58) expr -> expr POW . expr
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 115
    term                           shift and go to state 66
    id                             shift and go to state 69

state 92

    (57) expr -> MINUS expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 57 (expr -> MINUS expr .)
    LEQ             reduce using rule 57 (expr -> MINUS expr .)
    BEQ             reduce using rule 57 (expr -> MINUS expr .)
    LOW             reduce using rule 57 (expr -> MINUS expr .)
    BIG             reduce using rule 57 (expr -> MINUS expr .)
    PLUS            reduce using rule 57 (expr -> MINUS expr .)
    MINUS           reduce using rule 57 (expr -> MINUS expr .)
    MULT            reduce using rule 57 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 57 (expr -> MINUS expr .)
    INTERNAL        reduce using rule 57 (expr -> MINUS expr .)
    OUTPUT          reduce using rule 57 (expr -> MINUS expr .)
    INPUT           reduce using rule 57 (expr -> MINUS expr .)
    CONS            reduce using rule 57 (expr -> MINUS expr .)
    OBJ             reduce using rule 57 (expr -> MINUS expr .)
    NODE            reduce using rule 57 (expr -> MINUS expr .)
    LINKS           reduce using rule 57 (expr -> MINUS expr .)
    $end            reduce using rule 57 (expr -> MINUS expr .)
    RPAR            reduce using rule 57 (expr -> MINUS expr .)
    ID              reduce using rule 57 (expr -> MINUS expr .)
    VAR             reduce using rule 57 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 57 (expr -> MINUS expr .)
    RBRAC           reduce using rule 57 (expr -> MINUS expr .)
    MIN             reduce using rule 57 (expr -> MINUS expr .)
    MAX             reduce using rule 57 (expr -> MINUS expr .)
    POW             shift and go to state 91

  ! POW             [ reduce using rule 57 (expr -> MINUS expr .) ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]
  ! MULT            [ shift and go to state 89 ]
  ! DIVIDE          [ shift and go to state 90 ]


state 93

    (59) expr -> LPAR expr . RPAR
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    RPAR            shift and go to state 116
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 94

    (51) id -> ID LBRAC . expr RBRAC
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 117
    term                           shift and go to state 66
    id                             shift and go to state 69

state 95

    (31) define_variables -> INTERNAL COLON id . unity var_aux
    (64) unity -> . IN expr
    (65) unity -> . empty
    (20) empty -> .

    IN              shift and go to state 52
    INTERNAL        reduce using rule 20 (empty -> .)
    OUTPUT          reduce using rule 20 (empty -> .)
    INPUT           reduce using rule 20 (empty -> .)
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    unity                          shift and go to state 118
    empty                          shift and go to state 53

state 96

    (32) define_variables -> OUTPUT COLON id . unity var_aux
    (64) unity -> . IN expr
    (65) unity -> . empty
    (20) empty -> .

    IN              shift and go to state 52
    INTERNAL        reduce using rule 20 (empty -> .)
    OUTPUT          reduce using rule 20 (empty -> .)
    INPUT           reduce using rule 20 (empty -> .)
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    unity                          shift and go to state 119
    empty                          shift and go to state 53

state 97

    (33) define_variables -> INPUT COLON id . unity var_aux
    (64) unity -> . IN expr
    (65) unity -> . empty
    (20) empty -> .

    IN              shift and go to state 52
    INTERNAL        reduce using rule 20 (empty -> .)
    OUTPUT          reduce using rule 20 (empty -> .)
    INPUT           reduce using rule 20 (empty -> .)
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    unity                          shift and go to state 120
    empty                          shift and go to state 53

state 98

    (25) parameter -> ID unity EQUAL expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    ID              reduce using rule 25 (parameter -> ID unity EQUAL expr .)
    VAR             reduce using rule 25 (parameter -> ID unity EQUAL expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 99

    (26) parameter -> ID unity EQUAL LCBRAC . term more_values RCBRAC
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    term                           shift and go to state 121
    id                             shift and go to state 69

state 100

    (27) parameter -> ID unity EQUAL IMPORT . FILENAME

    FILENAME        shift and go to state 122


state 101

    (13) more_id -> COMMA NAME more_id .

    NAME            reduce using rule 13 (more_id -> COMMA NAME more_id .)
    $end            reduce using rule 13 (more_id -> COMMA NAME more_id .)


state 102

    (10) link_def -> NAME DOT ID EQUAL NAME DOT . ID more_id_aux

    ID              shift and go to state 123


state 103

    (47) define_objectives -> MIN COLON . expr obj_aux
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 124
    term                           shift and go to state 66
    id                             shift and go to state 69

state 104

    (48) define_objectives -> MAX COLON . expr obj_aux
    (53) expr -> . expr PLUS expr
    (54) expr -> . expr MINUS expr
    (55) expr -> . expr MULT expr
    (56) expr -> . expr DIVIDE expr
    (57) expr -> . MINUS expr
    (58) expr -> . expr POW expr
    (59) expr -> . LPAR expr RPAR
    (60) expr -> . term
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    MINUS           shift and go to state 64
    LPAR            shift and go to state 65
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    expr                           shift and go to state 125
    term                           shift and go to state 66
    id                             shift and go to state 69

state 105

    (38) constraints_aux -> define_constraints SEMICOLON constraints_aux .

    OBJ             reduce using rule 38 (constraints_aux -> define_constraints SEMICOLON constraints_aux .)
    NODE            reduce using rule 38 (constraints_aux -> define_constraints SEMICOLON constraints_aux .)
    LINKS           reduce using rule 38 (constraints_aux -> define_constraints SEMICOLON constraints_aux .)
    $end            reduce using rule 38 (constraints_aux -> define_constraints SEMICOLON constraints_aux .)


state 106

    (40) define_constraints -> expr EQUAL expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    SEMICOLON       reduce using rule 40 (define_constraints -> expr EQUAL expr .)
    OBJ             reduce using rule 40 (define_constraints -> expr EQUAL expr .)
    NODE            reduce using rule 40 (define_constraints -> expr EQUAL expr .)
    LINKS           reduce using rule 40 (define_constraints -> expr EQUAL expr .)
    $end            reduce using rule 40 (define_constraints -> expr EQUAL expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 107

    (41) define_constraints -> expr LEQ expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    SEMICOLON       reduce using rule 41 (define_constraints -> expr LEQ expr .)
    OBJ             reduce using rule 41 (define_constraints -> expr LEQ expr .)
    NODE            reduce using rule 41 (define_constraints -> expr LEQ expr .)
    LINKS           reduce using rule 41 (define_constraints -> expr LEQ expr .)
    $end            reduce using rule 41 (define_constraints -> expr LEQ expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 108

    (42) define_constraints -> expr BEQ expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    SEMICOLON       reduce using rule 42 (define_constraints -> expr BEQ expr .)
    OBJ             reduce using rule 42 (define_constraints -> expr BEQ expr .)
    NODE            reduce using rule 42 (define_constraints -> expr BEQ expr .)
    LINKS           reduce using rule 42 (define_constraints -> expr BEQ expr .)
    $end            reduce using rule 42 (define_constraints -> expr BEQ expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 109

    (43) define_constraints -> expr LOW expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    SEMICOLON       reduce using rule 43 (define_constraints -> expr LOW expr .)
    OBJ             reduce using rule 43 (define_constraints -> expr LOW expr .)
    NODE            reduce using rule 43 (define_constraints -> expr LOW expr .)
    LINKS           reduce using rule 43 (define_constraints -> expr LOW expr .)
    $end            reduce using rule 43 (define_constraints -> expr LOW expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 110

    (44) define_constraints -> expr BIG expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    SEMICOLON       reduce using rule 44 (define_constraints -> expr BIG expr .)
    OBJ             reduce using rule 44 (define_constraints -> expr BIG expr .)
    NODE            reduce using rule 44 (define_constraints -> expr BIG expr .)
    LINKS           reduce using rule 44 (define_constraints -> expr BIG expr .)
    $end            reduce using rule 44 (define_constraints -> expr BIG expr .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 111

    (53) expr -> expr PLUS expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 53 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 53 (expr -> expr PLUS expr .)
    BEQ             reduce using rule 53 (expr -> expr PLUS expr .)
    LOW             reduce using rule 53 (expr -> expr PLUS expr .)
    BIG             reduce using rule 53 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 53 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 53 (expr -> expr PLUS expr .)
    INTERNAL        reduce using rule 53 (expr -> expr PLUS expr .)
    OUTPUT          reduce using rule 53 (expr -> expr PLUS expr .)
    INPUT           reduce using rule 53 (expr -> expr PLUS expr .)
    CONS            reduce using rule 53 (expr -> expr PLUS expr .)
    OBJ             reduce using rule 53 (expr -> expr PLUS expr .)
    NODE            reduce using rule 53 (expr -> expr PLUS expr .)
    LINKS           reduce using rule 53 (expr -> expr PLUS expr .)
    $end            reduce using rule 53 (expr -> expr PLUS expr .)
    RPAR            reduce using rule 53 (expr -> expr PLUS expr .)
    ID              reduce using rule 53 (expr -> expr PLUS expr .)
    VAR             reduce using rule 53 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 53 (expr -> expr PLUS expr .)
    RBRAC           reduce using rule 53 (expr -> expr PLUS expr .)
    MIN             reduce using rule 53 (expr -> expr PLUS expr .)
    MAX             reduce using rule 53 (expr -> expr PLUS expr .)
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91

  ! MULT            [ reduce using rule 53 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 53 (expr -> expr PLUS expr .) ]
  ! POW             [ reduce using rule 53 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]


state 112

    (54) expr -> expr MINUS expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 54 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 54 (expr -> expr MINUS expr .)
    BEQ             reduce using rule 54 (expr -> expr MINUS expr .)
    LOW             reduce using rule 54 (expr -> expr MINUS expr .)
    BIG             reduce using rule 54 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 54 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 54 (expr -> expr MINUS expr .)
    INTERNAL        reduce using rule 54 (expr -> expr MINUS expr .)
    OUTPUT          reduce using rule 54 (expr -> expr MINUS expr .)
    INPUT           reduce using rule 54 (expr -> expr MINUS expr .)
    CONS            reduce using rule 54 (expr -> expr MINUS expr .)
    OBJ             reduce using rule 54 (expr -> expr MINUS expr .)
    NODE            reduce using rule 54 (expr -> expr MINUS expr .)
    LINKS           reduce using rule 54 (expr -> expr MINUS expr .)
    $end            reduce using rule 54 (expr -> expr MINUS expr .)
    RPAR            reduce using rule 54 (expr -> expr MINUS expr .)
    ID              reduce using rule 54 (expr -> expr MINUS expr .)
    VAR             reduce using rule 54 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 54 (expr -> expr MINUS expr .)
    RBRAC           reduce using rule 54 (expr -> expr MINUS expr .)
    MIN             reduce using rule 54 (expr -> expr MINUS expr .)
    MAX             reduce using rule 54 (expr -> expr MINUS expr .)
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91

  ! MULT            [ reduce using rule 54 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 54 (expr -> expr MINUS expr .) ]
  ! POW             [ reduce using rule 54 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]


state 113

    (55) expr -> expr MULT expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 55 (expr -> expr MULT expr .)
    LEQ             reduce using rule 55 (expr -> expr MULT expr .)
    BEQ             reduce using rule 55 (expr -> expr MULT expr .)
    LOW             reduce using rule 55 (expr -> expr MULT expr .)
    BIG             reduce using rule 55 (expr -> expr MULT expr .)
    PLUS            reduce using rule 55 (expr -> expr MULT expr .)
    MINUS           reduce using rule 55 (expr -> expr MULT expr .)
    MULT            reduce using rule 55 (expr -> expr MULT expr .)
    DIVIDE          reduce using rule 55 (expr -> expr MULT expr .)
    INTERNAL        reduce using rule 55 (expr -> expr MULT expr .)
    OUTPUT          reduce using rule 55 (expr -> expr MULT expr .)
    INPUT           reduce using rule 55 (expr -> expr MULT expr .)
    CONS            reduce using rule 55 (expr -> expr MULT expr .)
    OBJ             reduce using rule 55 (expr -> expr MULT expr .)
    NODE            reduce using rule 55 (expr -> expr MULT expr .)
    LINKS           reduce using rule 55 (expr -> expr MULT expr .)
    $end            reduce using rule 55 (expr -> expr MULT expr .)
    RPAR            reduce using rule 55 (expr -> expr MULT expr .)
    ID              reduce using rule 55 (expr -> expr MULT expr .)
    VAR             reduce using rule 55 (expr -> expr MULT expr .)
    SEMICOLON       reduce using rule 55 (expr -> expr MULT expr .)
    RBRAC           reduce using rule 55 (expr -> expr MULT expr .)
    MIN             reduce using rule 55 (expr -> expr MULT expr .)
    MAX             reduce using rule 55 (expr -> expr MULT expr .)
    POW             shift and go to state 91

  ! POW             [ reduce using rule 55 (expr -> expr MULT expr .) ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]
  ! MULT            [ shift and go to state 89 ]
  ! DIVIDE          [ shift and go to state 90 ]


state 114

    (56) expr -> expr DIVIDE expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 56 (expr -> expr DIVIDE expr .)
    LEQ             reduce using rule 56 (expr -> expr DIVIDE expr .)
    BEQ             reduce using rule 56 (expr -> expr DIVIDE expr .)
    LOW             reduce using rule 56 (expr -> expr DIVIDE expr .)
    BIG             reduce using rule 56 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 56 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 56 (expr -> expr DIVIDE expr .)
    MULT            reduce using rule 56 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 56 (expr -> expr DIVIDE expr .)
    INTERNAL        reduce using rule 56 (expr -> expr DIVIDE expr .)
    OUTPUT          reduce using rule 56 (expr -> expr DIVIDE expr .)
    INPUT           reduce using rule 56 (expr -> expr DIVIDE expr .)
    CONS            reduce using rule 56 (expr -> expr DIVIDE expr .)
    OBJ             reduce using rule 56 (expr -> expr DIVIDE expr .)
    NODE            reduce using rule 56 (expr -> expr DIVIDE expr .)
    LINKS           reduce using rule 56 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 56 (expr -> expr DIVIDE expr .)
    RPAR            reduce using rule 56 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 56 (expr -> expr DIVIDE expr .)
    VAR             reduce using rule 56 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 56 (expr -> expr DIVIDE expr .)
    RBRAC           reduce using rule 56 (expr -> expr DIVIDE expr .)
    MIN             reduce using rule 56 (expr -> expr DIVIDE expr .)
    MAX             reduce using rule 56 (expr -> expr DIVIDE expr .)
    POW             shift and go to state 91

  ! POW             [ reduce using rule 56 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]
  ! MULT            [ shift and go to state 89 ]
  ! DIVIDE          [ shift and go to state 90 ]


state 115

    (58) expr -> expr POW expr .
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    EQUAL           reduce using rule 58 (expr -> expr POW expr .)
    LEQ             reduce using rule 58 (expr -> expr POW expr .)
    BEQ             reduce using rule 58 (expr -> expr POW expr .)
    LOW             reduce using rule 58 (expr -> expr POW expr .)
    BIG             reduce using rule 58 (expr -> expr POW expr .)
    PLUS            reduce using rule 58 (expr -> expr POW expr .)
    MINUS           reduce using rule 58 (expr -> expr POW expr .)
    MULT            reduce using rule 58 (expr -> expr POW expr .)
    DIVIDE          reduce using rule 58 (expr -> expr POW expr .)
    POW             reduce using rule 58 (expr -> expr POW expr .)
    INTERNAL        reduce using rule 58 (expr -> expr POW expr .)
    OUTPUT          reduce using rule 58 (expr -> expr POW expr .)
    INPUT           reduce using rule 58 (expr -> expr POW expr .)
    CONS            reduce using rule 58 (expr -> expr POW expr .)
    OBJ             reduce using rule 58 (expr -> expr POW expr .)
    NODE            reduce using rule 58 (expr -> expr POW expr .)
    LINKS           reduce using rule 58 (expr -> expr POW expr .)
    $end            reduce using rule 58 (expr -> expr POW expr .)
    RPAR            reduce using rule 58 (expr -> expr POW expr .)
    ID              reduce using rule 58 (expr -> expr POW expr .)
    VAR             reduce using rule 58 (expr -> expr POW expr .)
    SEMICOLON       reduce using rule 58 (expr -> expr POW expr .)
    RBRAC           reduce using rule 58 (expr -> expr POW expr .)
    MIN             reduce using rule 58 (expr -> expr POW expr .)
    MAX             reduce using rule 58 (expr -> expr POW expr .)

  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 88 ]
  ! MULT            [ shift and go to state 89 ]
  ! DIVIDE          [ shift and go to state 90 ]
  ! POW             [ shift and go to state 91 ]


state 116

    (59) expr -> LPAR expr RPAR .

    EQUAL           reduce using rule 59 (expr -> LPAR expr RPAR .)
    LEQ             reduce using rule 59 (expr -> LPAR expr RPAR .)
    BEQ             reduce using rule 59 (expr -> LPAR expr RPAR .)
    LOW             reduce using rule 59 (expr -> LPAR expr RPAR .)
    BIG             reduce using rule 59 (expr -> LPAR expr RPAR .)
    PLUS            reduce using rule 59 (expr -> LPAR expr RPAR .)
    MINUS           reduce using rule 59 (expr -> LPAR expr RPAR .)
    MULT            reduce using rule 59 (expr -> LPAR expr RPAR .)
    DIVIDE          reduce using rule 59 (expr -> LPAR expr RPAR .)
    POW             reduce using rule 59 (expr -> LPAR expr RPAR .)
    INTERNAL        reduce using rule 59 (expr -> LPAR expr RPAR .)
    OUTPUT          reduce using rule 59 (expr -> LPAR expr RPAR .)
    INPUT           reduce using rule 59 (expr -> LPAR expr RPAR .)
    CONS            reduce using rule 59 (expr -> LPAR expr RPAR .)
    OBJ             reduce using rule 59 (expr -> LPAR expr RPAR .)
    NODE            reduce using rule 59 (expr -> LPAR expr RPAR .)
    LINKS           reduce using rule 59 (expr -> LPAR expr RPAR .)
    $end            reduce using rule 59 (expr -> LPAR expr RPAR .)
    RPAR            reduce using rule 59 (expr -> LPAR expr RPAR .)
    ID              reduce using rule 59 (expr -> LPAR expr RPAR .)
    VAR             reduce using rule 59 (expr -> LPAR expr RPAR .)
    SEMICOLON       reduce using rule 59 (expr -> LPAR expr RPAR .)
    RBRAC           reduce using rule 59 (expr -> LPAR expr RPAR .)
    MIN             reduce using rule 59 (expr -> LPAR expr RPAR .)
    MAX             reduce using rule 59 (expr -> LPAR expr RPAR .)


state 117

    (51) id -> ID LBRAC expr . RBRAC
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr

    RBRAC           shift and go to state 126
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91


state 118

    (31) define_variables -> INTERNAL COLON id unity . var_aux
    (34) var_aux -> . define_variables
    (35) var_aux -> . empty
    (31) define_variables -> . INTERNAL COLON id unity var_aux
    (32) define_variables -> . OUTPUT COLON id unity var_aux
    (33) define_variables -> . INPUT COLON id unity var_aux
    (20) empty -> .

    INTERNAL        shift and go to state 47
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    var_aux                        shift and go to state 127
    define_variables               shift and go to state 128
    empty                          shift and go to state 129

state 119

    (32) define_variables -> OUTPUT COLON id unity . var_aux
    (34) var_aux -> . define_variables
    (35) var_aux -> . empty
    (31) define_variables -> . INTERNAL COLON id unity var_aux
    (32) define_variables -> . OUTPUT COLON id unity var_aux
    (33) define_variables -> . INPUT COLON id unity var_aux
    (20) empty -> .

    INTERNAL        shift and go to state 47
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    var_aux                        shift and go to state 130
    define_variables               shift and go to state 128
    empty                          shift and go to state 129

state 120

    (33) define_variables -> INPUT COLON id unity . var_aux
    (34) var_aux -> . define_variables
    (35) var_aux -> . empty
    (31) define_variables -> . INTERNAL COLON id unity var_aux
    (32) define_variables -> . OUTPUT COLON id unity var_aux
    (33) define_variables -> . INPUT COLON id unity var_aux
    (20) empty -> .

    INTERNAL        shift and go to state 47
    OUTPUT          shift and go to state 48
    INPUT           shift and go to state 49
    CONS            reduce using rule 20 (empty -> .)
    OBJ             reduce using rule 20 (empty -> .)
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    var_aux                        shift and go to state 131
    define_variables               shift and go to state 128
    empty                          shift and go to state 129

state 121

    (26) parameter -> ID unity EQUAL LCBRAC term . more_values RCBRAC
    (28) more_values -> . COMMA term more_values
    (29) more_values -> . empty
    (20) empty -> .

    COMMA           shift and go to state 133
    RCBRAC          reduce using rule 20 (empty -> .)

    more_values                    shift and go to state 132
    empty                          shift and go to state 134

state 122

    (27) parameter -> ID unity EQUAL IMPORT FILENAME .

    ID              reduce using rule 27 (parameter -> ID unity EQUAL IMPORT FILENAME .)
    VAR             reduce using rule 27 (parameter -> ID unity EQUAL IMPORT FILENAME .)


state 123

    (10) link_def -> NAME DOT ID EQUAL NAME DOT ID . more_id_aux
    (11) more_id_aux -> . COMMA NAME DOT ID more_id_aux
    (12) more_id_aux -> . empty
    (20) empty -> .

    COMMA           shift and go to state 136
    NAME            reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    more_id_aux                    shift and go to state 135
    empty                          shift and go to state 137

state 124

    (47) define_objectives -> MIN COLON expr . obj_aux
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr
    (49) obj_aux -> . define_objectives
    (50) obj_aux -> . empty
    (47) define_objectives -> . MIN COLON expr obj_aux
    (48) define_objectives -> . MAX COLON expr obj_aux
    (20) empty -> .

    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91
    MIN             shift and go to state 79
    MAX             shift and go to state 80
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    obj_aux                        shift and go to state 138
    define_objectives              shift and go to state 139
    empty                          shift and go to state 140

state 125

    (48) define_objectives -> MAX COLON expr . obj_aux
    (53) expr -> expr . PLUS expr
    (54) expr -> expr . MINUS expr
    (55) expr -> expr . MULT expr
    (56) expr -> expr . DIVIDE expr
    (58) expr -> expr . POW expr
    (49) obj_aux -> . define_objectives
    (50) obj_aux -> . empty
    (47) define_objectives -> . MIN COLON expr obj_aux
    (48) define_objectives -> . MAX COLON expr obj_aux
    (20) empty -> .

    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    MULT            shift and go to state 89
    DIVIDE          shift and go to state 90
    POW             shift and go to state 91
    MIN             shift and go to state 79
    MAX             shift and go to state 80
    NODE            reduce using rule 20 (empty -> .)
    LINKS           reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    obj_aux                        shift and go to state 141
    define_objectives              shift and go to state 139
    empty                          shift and go to state 140

state 126

    (51) id -> ID LBRAC expr RBRAC .

    EQUAL           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    LEQ             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    BEQ             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    LOW             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    BIG             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    PLUS            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    MINUS           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    MULT            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    DIVIDE          reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    POW             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    INTERNAL        reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    OUTPUT          reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    INPUT           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    CONS            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    OBJ             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    NODE            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    LINKS           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    $end            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    RPAR            reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    ID              reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    VAR             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    SEMICOLON       reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    RBRAC           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    MIN             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    MAX             reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    IN              reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    COMMA           reduce using rule 51 (id -> ID LBRAC expr RBRAC .)
    RCBRAC          reduce using rule 51 (id -> ID LBRAC expr RBRAC .)


state 127

    (31) define_variables -> INTERNAL COLON id unity var_aux .

    CONS            reduce using rule 31 (define_variables -> INTERNAL COLON id unity var_aux .)
    OBJ             reduce using rule 31 (define_variables -> INTERNAL COLON id unity var_aux .)
    NODE            reduce using rule 31 (define_variables -> INTERNAL COLON id unity var_aux .)
    LINKS           reduce using rule 31 (define_variables -> INTERNAL COLON id unity var_aux .)
    $end            reduce using rule 31 (define_variables -> INTERNAL COLON id unity var_aux .)


state 128

    (34) var_aux -> define_variables .

    CONS            reduce using rule 34 (var_aux -> define_variables .)
    OBJ             reduce using rule 34 (var_aux -> define_variables .)
    NODE            reduce using rule 34 (var_aux -> define_variables .)
    LINKS           reduce using rule 34 (var_aux -> define_variables .)
    $end            reduce using rule 34 (var_aux -> define_variables .)


state 129

    (35) var_aux -> empty .

    CONS            reduce using rule 35 (var_aux -> empty .)
    OBJ             reduce using rule 35 (var_aux -> empty .)
    NODE            reduce using rule 35 (var_aux -> empty .)
    LINKS           reduce using rule 35 (var_aux -> empty .)
    $end            reduce using rule 35 (var_aux -> empty .)


state 130

    (32) define_variables -> OUTPUT COLON id unity var_aux .

    CONS            reduce using rule 32 (define_variables -> OUTPUT COLON id unity var_aux .)
    OBJ             reduce using rule 32 (define_variables -> OUTPUT COLON id unity var_aux .)
    NODE            reduce using rule 32 (define_variables -> OUTPUT COLON id unity var_aux .)
    LINKS           reduce using rule 32 (define_variables -> OUTPUT COLON id unity var_aux .)
    $end            reduce using rule 32 (define_variables -> OUTPUT COLON id unity var_aux .)


state 131

    (33) define_variables -> INPUT COLON id unity var_aux .

    CONS            reduce using rule 33 (define_variables -> INPUT COLON id unity var_aux .)
    OBJ             reduce using rule 33 (define_variables -> INPUT COLON id unity var_aux .)
    NODE            reduce using rule 33 (define_variables -> INPUT COLON id unity var_aux .)
    LINKS           reduce using rule 33 (define_variables -> INPUT COLON id unity var_aux .)
    $end            reduce using rule 33 (define_variables -> INPUT COLON id unity var_aux .)


state 132

    (26) parameter -> ID unity EQUAL LCBRAC term more_values . RCBRAC

    RCBRAC          shift and go to state 142


state 133

    (28) more_values -> COMMA . term more_values
    (61) term -> . INT
    (62) term -> . FLOAT
    (63) term -> . id
    (51) id -> . ID LBRAC expr RBRAC
    (52) id -> . ID

    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 70

    term                           shift and go to state 143
    id                             shift and go to state 69

state 134

    (29) more_values -> empty .

    RCBRAC          reduce using rule 29 (more_values -> empty .)


state 135

    (10) link_def -> NAME DOT ID EQUAL NAME DOT ID more_id_aux .

    NAME            reduce using rule 10 (link_def -> NAME DOT ID EQUAL NAME DOT ID more_id_aux .)
    $end            reduce using rule 10 (link_def -> NAME DOT ID EQUAL NAME DOT ID more_id_aux .)


state 136

    (11) more_id_aux -> COMMA . NAME DOT ID more_id_aux

    NAME            shift and go to state 144


state 137

    (12) more_id_aux -> empty .

    NAME            reduce using rule 12 (more_id_aux -> empty .)
    $end            reduce using rule 12 (more_id_aux -> empty .)


state 138

    (47) define_objectives -> MIN COLON expr obj_aux .

    NODE            reduce using rule 47 (define_objectives -> MIN COLON expr obj_aux .)
    LINKS           reduce using rule 47 (define_objectives -> MIN COLON expr obj_aux .)
    $end            reduce using rule 47 (define_objectives -> MIN COLON expr obj_aux .)


state 139

    (49) obj_aux -> define_objectives .

    NODE            reduce using rule 49 (obj_aux -> define_objectives .)
    LINKS           reduce using rule 49 (obj_aux -> define_objectives .)
    $end            reduce using rule 49 (obj_aux -> define_objectives .)


state 140

    (50) obj_aux -> empty .

    NODE            reduce using rule 50 (obj_aux -> empty .)
    LINKS           reduce using rule 50 (obj_aux -> empty .)
    $end            reduce using rule 50 (obj_aux -> empty .)


state 141

    (48) define_objectives -> MAX COLON expr obj_aux .

    NODE            reduce using rule 48 (define_objectives -> MAX COLON expr obj_aux .)
    LINKS           reduce using rule 48 (define_objectives -> MAX COLON expr obj_aux .)
    $end            reduce using rule 48 (define_objectives -> MAX COLON expr obj_aux .)


state 142

    (26) parameter -> ID unity EQUAL LCBRAC term more_values RCBRAC .

    ID              reduce using rule 26 (parameter -> ID unity EQUAL LCBRAC term more_values RCBRAC .)
    VAR             reduce using rule 26 (parameter -> ID unity EQUAL LCBRAC term more_values RCBRAC .)


state 143

    (28) more_values -> COMMA term . more_values
    (28) more_values -> . COMMA term more_values
    (29) more_values -> . empty
    (20) empty -> .

    COMMA           shift and go to state 133
    RCBRAC          reduce using rule 20 (empty -> .)

    more_values                    shift and go to state 145
    empty                          shift and go to state 134

state 144

    (11) more_id_aux -> COMMA NAME . DOT ID more_id_aux

    DOT             shift and go to state 146


state 145

    (28) more_values -> COMMA term more_values .

    RCBRAC          reduce using rule 28 (more_values -> COMMA term more_values .)


state 146

    (11) more_id_aux -> COMMA NAME DOT . ID more_id_aux

    ID              shift and go to state 147


state 147

    (11) more_id_aux -> COMMA NAME DOT ID . more_id_aux
    (11) more_id_aux -> . COMMA NAME DOT ID more_id_aux
    (12) more_id_aux -> . empty
    (20) empty -> .

    COMMA           shift and go to state 136
    NAME            reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)

    more_id_aux                    shift and go to state 148
    empty                          shift and go to state 137

state 148

    (11) more_id_aux -> COMMA NAME DOT ID more_id_aux .

    NAME            reduce using rule 11 (more_id_aux -> COMMA NAME DOT ID more_id_aux .)
    $end            reduce using rule 11 (more_id_aux -> COMMA NAME DOT ID more_id_aux .)

